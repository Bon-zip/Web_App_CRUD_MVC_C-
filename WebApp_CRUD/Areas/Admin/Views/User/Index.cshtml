@model X.PagedList.IPagedList<WebApp_CRUD.Data.User>
@using X.PagedList.Mvc.Core;

@{
}

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4">
        <div class="iq-header-title">
            <h4 class="card-title">Danh sách tài khoản</h4>
        </div>
    </h4>
    <div class="d-flex justify-content-between container">
        <div class="iq-card-header d-flex justify-content-between">
            <div class="iq-card-header-toolbar d-flex align-items-center">
                <a asp-action="Create" class="btn btn-primary">Add Account New</a>
            </div>
            <a class="btn btn-danger" asp-action="Index" style="width:150px" type="submit">Làm mới</a>

        </div>
        <!-- Search -->
        <form asp-action="Index" method="get">
            <div class="navbar-nav align-items-center">
                <div class="nav-item d-flex align-items-center">
                    <input type="text" class="form-control border-0 shadow-none" name="searchName" placeholder="Tìm kiếm tài khoản...">
                    <button class="btn btn-primary" style="width:150px" type="submit">Tìm kiếm</button>
                </div>
            </div>
        </form>
    </div>
    <div class="card">
        <h5 class="card-header">Table Basic</h5>
        <div class="table-responsive text-nowrap" style="height: 500px;">
            <table class="table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>UserName</th>
                        <th>Password</th>
                        <th>FirstName</th>
                        <th>LastName</th> <!-- Cập nhật tên Brand -->
                        <th>Avatar</th> <!-- Cập nhật tên Category -->
                        <th>Gender</th> <!-- Thêm cột cho các hành động -->
                        <th>Lever</th>
                        <th>Active</th>
                    </tr>
                </thead>
                <tbody class="table-border-bottom-0">
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td><strong>@item.Id</strong></td>
                            <td><strong>@item.UserName</strong></td>
                            <td><strong>@item.Password</strong></td>
                            <td><strong>@item.FirstName</strong></td>
                            <td><strong>@item.LastName</strong></td>
                            <td>        
                                <img src="@(Url.Content("~/Uploads/users/" + item.Avatar))"
                                     alt="Image of @item.Avatar" class="card-img" style="width: 100px;" />
                            </td>
                            <td><strong> @(item.Gender == 1 ? "Nam" : "Nữ")</strong></td>
                            <td><strong>@(item.Lever == 1 ? "User" : "Admin")</strong></td>
                            <td><strong>@(item.Active == 1 ? "Đóng" : "Mở")</strong></td>

                            <td>
                                <div class="dropdown">
                                    <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="bx bx-dots-vertical-rounded"></i></button>
                                    <div class="dropdown-menu">
                                        <a class="dropdown-item" asp-action="Edit" asp-route-id="@item.Id"><i class="bx bx-edit-alt me-1"></i> Edit</a>
                                        <a class="dropdown-item" asp-action="Delete" onclick="return confirm('Are you sure you want to delete this Account ?');" asp-route-id="@item.Id"><i class="bx bx-trash me-1"></i> Delete</a>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })" aria-label="Previous">
                <i class="tf-icon bx bx-chevrons-left"></i>
            </a>
        </li>

        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }),
                          new PagedListRenderOptions
                 {
                     LiElementClasses = new[] { "page-item" },
                     PageClasses = new[] { "page-link" },
                     UlElementClasses = new[] { "pagination" },
                 })

        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })" aria-label="Next">
                <i class="tf-icon bx bx-chevrons-right"></i>
            </a>
        </li>
    </ul>
</nav>
